#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_TokenWallet.headers.fc";
#include "tact_TokenWallet.stdlib.fc";
#include "tact_TokenWallet.constants.fc";
#include "tact_TokenWallet.storage.fc";

;;
;; Contract TokenWallet functions
;;

(int, slice, slice, int, int, int, slice, int, int) $TokenWallet$_contract_init(slice $owner, slice $master) impure inline_ref {
    var (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt)) = (0, null(), null(), null(), null(), null(), null(), 0, 0);
    $self'owner = $owner;
    $self'master = $master;
    $self'inviter = __gen_slice_address_6b6773eb2be243e852693f38391934fa6ae2eb9c9e6c4d5bd06c928fc65daa4a();
    $self'lastClaimed = $global_now();
    $self'subscribedUntil = $global_now();
    $self'jettonsToClaim = 0;
    return ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt);
}

((int, slice, slice, int, int, int, slice, int, int), (int, slice, slice, cell)) $TokenWallet$_fun_get_wallet_data((int, slice, slice, int, int, int, slice, int, int) $self) impure inline_ref {
    var (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt)) = $self;
    var $fresh$ret_0 = $WalletData$_constructor_balance_owner_master_code($self'balance, $self'owner, $self'master, $StateInit$_get_code($TokenWallet$_init_child(__tact_context_sys, $self'owner, $self'master)));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), $fresh$ret_0);
}

((int, slice, slice, int, int, int, slice, int, int), (int, int, int, int, slice, int)) $TokenWallet$_fun_memberData((int, slice, slice, int, int, int, slice, int, int) $self) impure inline_ref {
    var (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt)) = $self;
    var $fresh$ret_1 = $MemberData$_constructor_totalVoted_lastClaimed_subscribedUntil_jettonsToClaim_inviter_poolWithdrawnAt($self'totalVoted, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'poolWithdrawnAt);
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), $fresh$ret_1);
}

;;
;; Receivers of a Contract TokenWallet
;;

(((int, slice, slice, int, int, int, slice, int, int)), ()) %$TokenWallet$_internal_empty((int, slice, slice, int, int, int, slice, int, int) $self) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_ChangeInviter((int, slice, slice, int, int, int, slice, int, int) $self, (slice) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'inviter) = $msg;
    throw_unless(4429, ( (( __tact_slice_eq_bits(__tact_context_get_sender(), $self'owner) )) ? (true) : (( __tact_slice_eq_bits(__tact_context_get_sender(), $self'master) )) ));
    throw_unless(30201, ( __tact_slice_eq_bits(__gen_slice_address_6b6773eb2be243e852693f38391934fa6ae2eb9c9e6c4d5bd06c928fc65daa4a(), $self'inviter) ));
    $self'inviter = $msg'inviter;
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_Transfer((int, slice, slice, int, int, int, slice, int, int) $self, (int, int, slice, slice, cell, int, slice) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'query_id, $msg'amount, $msg'destination, $msg'response_destination, $msg'custom_payload, $msg'forward_ton_amount, $msg'forward_payload) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(4429, ( __tact_slice_eq_bits($ctx'sender, $self'owner) ));
    $self'balance = ($self'balance - $msg'amount);
    throw_unless(54227, ($self'balance >= 0));
    throw_unless(51724, ((($Context$_fun_readForwardFee(($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw)) + 10000000) + $msg'forward_ton_amount) < $ctx'value));
    var ($init'code, $init'data) = $TokenWallet$_init_child(__tact_context_sys, $msg'destination, $self'master);
    slice $to = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body_data_code($to, 0, 64, false, $InternalTransfer$_store_cell($InternalTransfer$_constructor_query_id_amount_from_response_destination_forward_ton_amount_forward_payload($msg'query_id, $msg'amount, $self'owner, $msg'response_destination, $msg'forward_ton_amount, $msg'forward_payload)), $init'data, $init'code));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_AddVots((int, slice, slice, int, int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'amount) = $msg;
    throw_unless(4429, ( __tact_slice_eq_bits($self'master, __tact_context_get_sender()) ));
    $self'totalVoted = ($self'totalVoted + $msg'amount);
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_PoolIncome((int, slice, slice, int, int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'poolWithdrawnAt) = $msg;
    slice $poolAddress = $global_contractAddress($MembersPool$_init_child(__tact_context_sys, $self'master));
    throw_unless(55027, ( __tact_slice_eq_bits(__tact_context_get_sender(), $poolAddress) ));
    $self'poolWithdrawnAt = $msg'poolWithdrawnAt;
    $global_send($SendParameters$_constructor_to_value_mode($self'owner, 0, 64));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_InternalTransfer((int, slice, slice, int, int, int, slice, int, int) $self, (int, int, slice, slice, int, slice) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'query_id, $msg'amount, $msg'from, $msg'response_destination, $msg'forward_ton_amount, $msg'forward_payload) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    if (( ~ __tact_slice_eq_bits($self'master, $ctx'sender) )) {
        var ($init'code, $init'data) = $TokenWallet$_init_child(__tact_context_sys, $msg'from, $self'master);
        throw_unless(4429, ( __tact_slice_eq_bits($ctx'sender, $global_contractAddress(($init'code, $init'data))) ));
    }
    $self'balance = ($self'balance + $msg'amount);
    throw_unless(54227, ($self'balance >= 0));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'owner, 0, 64, false, $TransferNotification$_store_cell($TransferNotification$_constructor_query_id_amount_sender_forward_payload($msg'query_id, $msg'amount, $msg'from, $msg'forward_payload))));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_Burn((int, slice, slice, int, int, int, slice, int, int) $self, (int, int, slice, cell) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'query_id, $msg'amount, $msg'response_destination, $msg'custom_payload) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(4429, ( __tact_slice_eq_bits($ctx'sender, $self'owner) ));
    throw_unless(51724, ($ctx'value > (40000000 + $Context$_fun_readForwardFee(($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw)))));
    $self'balance = ($self'balance - $msg'amount);
    throw_unless(54227, ($self'balance >= 0));
    $global_send($SendParameters$_constructor_to_value_mode_body($self'master, 0, 64, $BurnNotification$_store_cell($BurnNotification$_constructor_query_id_amount_sender_response_destination($msg'query_id, $msg'amount, $self'owner, $msg'response_destination))));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_UpdateSubscribe((int, slice, slice, int, int, int, slice, int, int) $self, (int, int) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'jettons, $msg'price) = $msg;
    throw_unless(4429, ( __tact_slice_eq_bits($Context$_get_sender(__tact_context_get()), $self'master) ));
    var ($init'code, $init'data) = $TokenWallet$_init_child(__tact_context_sys, $self'inviter, $self'master);
    slice $refWallet = $global_contractAddress(($init'code, $init'data));
    $self'balance = ($self'balance + $msg'jettons);
    $self'lastClaimed = $global_now();
    $self'subscribedUntil = (($global_now() + 1) + 2419200);
    int $refIncome = ($msg'price / 10);
    $global_send($SendParameters$_constructor_to_value_mode_body_data_code($refWallet, (($refIncome + ($refIncome / 2)) + 40000000), 64, $RefIncome$_store_cell($RefIncome$_constructor_income_sender_amount_counter($refIncome, $self'owner, $msg'jettons, 0)), $init'data, $init'code));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_RefIncome((int, slice, slice, int, int, int, slice, int, int) $self, (int, slice, int, int) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'amount, $msg'sender, $msg'counter, $msg'income) = $msg;
    var ($init'code, $init'data) = $TokenWallet$_init_child(__tact_context_sys, $msg'sender, $self'master);
    throw_unless(4429, ( __tact_slice_eq_bits(__tact_context_get_sender(), $global_contractAddress(($init'code, $init'data))) ));
    $self'balance = ($self'balance + $msg'amount);
    throw_unless(54227, ($self'balance >= 0));
    var ($initTo'code, $initTo'data) = $TokenWallet$_init_child(__tact_context_sys, $self'owner, $self'master);
    slice $to = $global_contractAddress(($initTo'code, $initTo'data));
    int $refIncome = ($msg'income / 2);
    if (($msg'counter < 1)) {
        $global_send($SendParameters$_constructor_to_value_mode_body_data_code($to, ($refIncome + 20000000), 0, $RefIncome$_store_cell($RefIncome$_constructor_income_sender_amount_counter($refIncome, $self'owner, ($msg'amount / 2), ($msg'counter + 1))), $initTo'data, $initTo'code));
    }
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_ClaimPool((int, slice, slice, int, int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'query_id) = $msg;
    throw_unless(4429, ( __tact_slice_eq_bits($Context$_get_sender(__tact_context_get()), $self'owner) ));
    $global_send($SendParameters$_constructor_to_value_mode_body($self'master, 0, 64, $CheckSupply$_store_cell($CheckSupply$_constructor_sender_poolWithdrawnAt_totalVoted($self'owner, $self'poolWithdrawnAt, $self'totalVoted))));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_internal_binary_Claim((int, slice, slice, int, int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($msg'query_id) = $msg;
    throw_unless(4429, ( __tact_slice_eq_bits($Context$_get_sender(__tact_context_get()), $self'owner) ));
    int $claims = (($global_now() - $self'lastClaimed) / 604800);
    if (($global_now() > $self'subscribedUntil)) {
        $claims = (($self'subscribedUntil - $self'lastClaimed) / 604800);
    }
    $self'lastClaimed = $global_now();
    if (($self'lastClaimed >= $self'subscribedUntil)) {
        $self'jettonsToClaim = 0;
    }
    throw_unless(14073, ($claims > 0));
    $self'balance = $self'balance + ($claims * $self'jettonsToClaim);
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'owner, 0, 64, false, $MintVots$_store_cell($MintVots$_constructor_amount_sender(($claims * $self'jettonsToClaim), $self'owner))));
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_receive_binary_bounce_InternalTransfer((int, slice, slice, int, int, int, slice, int, int) $self, (int, int) $src) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($src'query_id, $src'amount) = $src;
    $self'balance = ($self'balance + $src'amount);
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

(((int, slice, slice, int, int, int, slice, int, int)), ()) $TokenWallet$_receive_binary_bounce_BurnNotification((int, slice, slice, int, int, int, slice, int, int) $self, (int, int) $src) impure inline {
    var ($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt) = $self;
    var ($src'query_id, $src'amount) = $src;
    $self'balance = ($self'balance + $src'amount);
    return (($self'balance, $self'owner, $self'master, $self'lastClaimed, $self'subscribedUntil, $self'jettonsToClaim, $self'inviter, $self'totalVoted, $self'poolWithdrawnAt), ());
}

;;
;; Get methods of a Contract TokenWallet
;;

_ %get_wallet_data() method_id(97026) {
    var self = $TokenWallet$_contract_load();
    var res = self~$TokenWallet$_fun_get_wallet_data();
    return $WalletData$_to_external(res);
}

_ %memberData() method_id(111056) {
    var self = $TokenWallet$_contract_load();
    var res = self~$TokenWallet$_fun_memberData();
    return $MemberData$_to_external(res);
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract TokenWallet
;;

((int, slice, slice, int, int, int, slice, int, int), int) $TokenWallet$_contract_router_internal((int, slice, slice, int, int, int, slice, int, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
        
        ;; Parse op
        int op = 0;
        if (slice_bits(in_msg) >= 32) {
            op = in_msg.preload_uint(32);
        }
        
        ;; Bounced handler for InternalTransfer message
        if (op == 0x178d4519) {
            var msg = in_msg~$InternalTransfer$_load_bounced();
            self~$TokenWallet$_receive_binary_bounce_InternalTransfer(msg);
            return (self, true);
        }
        
        ;; Bounced handler for BurnNotification message
        if (op == 0x7bdd97de) {
            var msg = in_msg~$BurnNotification$_load_bounced();
            self~$TokenWallet$_receive_binary_bounce_BurnNotification(msg);
            return (self, true);
        }
        
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$TokenWallet$_internal_empty();
        return (self, true);
    }
    
    ;; Receive ChangeInviter message
    if (op == 387241414) {
        var msg = in_msg~$ChangeInviter$_load();
        self~$TokenWallet$_internal_binary_ChangeInviter(msg);
        return (self, true);
    }
    
    ;; Receive Transfer message
    if (op == 0xf8a7ea5) {
        var msg = in_msg~$Transfer$_load();
        self~$TokenWallet$_internal_binary_Transfer(msg);
        return (self, true);
    }
    
    ;; Receive AddVots message
    if (op == 3970053455) {
        var msg = in_msg~$AddVots$_load();
        self~$TokenWallet$_internal_binary_AddVots(msg);
        return (self, true);
    }
    
    ;; Receive PoolIncome message
    if (op == 2755660441) {
        var msg = in_msg~$PoolIncome$_load();
        self~$TokenWallet$_internal_binary_PoolIncome(msg);
        return (self, true);
    }
    
    ;; Receive InternalTransfer message
    if (op == 0x178d4519) {
        var msg = in_msg~$InternalTransfer$_load();
        self~$TokenWallet$_internal_binary_InternalTransfer(msg);
        return (self, true);
    }
    
    ;; Receive Burn message
    if (op == 0x595f07bc) {
        var msg = in_msg~$Burn$_load();
        self~$TokenWallet$_internal_binary_Burn(msg);
        return (self, true);
    }
    
    ;; Receive UpdateSubscribe message
    if (op == 2522673192) {
        var msg = in_msg~$UpdateSubscribe$_load();
        self~$TokenWallet$_internal_binary_UpdateSubscribe(msg);
        return (self, true);
    }
    
    ;; Receive RefIncome message
    if (op == 588723692) {
        var msg = in_msg~$RefIncome$_load();
        self~$TokenWallet$_internal_binary_RefIncome(msg);
        return (self, true);
    }
    
    ;; Receive ClaimPool message
    if (op == 2068911418) {
        var msg = in_msg~$ClaimPool$_load();
        self~$TokenWallet$_internal_binary_ClaimPool(msg);
        return (self, true);
    }
    
    ;; Receive Claim message
    if (op == 3281185899) {
        var msg = in_msg~$Claim$_load();
        self~$TokenWallet$_internal_binary_Claim(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $TokenWallet$_contract_load();
    
    ;; Handle operation
    int handled = self~$TokenWallet$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $TokenWallet$_contract_store(self);
}
