;;
;; Header files for TokenWallet
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Transfer$_load
(slice, ((int, int, slice, slice, cell, int, slice))) $Transfer$_load(slice sc_0) inline_ref;

;; $RefIncome$_store
builder $RefIncome$_store(builder build_0, (int, slice, int, int) v) inline;

;; $RefIncome$_store_cell
cell $RefIncome$_store_cell((int, slice, int, int) v) inline;

;; $RefIncome$_load
(slice, ((int, slice, int, int))) $RefIncome$_load(slice sc_0) inline;

;; $AddVots$_load
(slice, ((int))) $AddVots$_load(slice sc_0) inline;

;; $CheckSupply$_store
builder $CheckSupply$_store(builder build_0, (int, slice, int) v) inline;

;; $CheckSupply$_store_cell
cell $CheckSupply$_store_cell((int, slice, int) v) inline;

;; $ClaimPool$_load
(slice, ((int))) $ClaimPool$_load(slice sc_0) inline;

;; $ChangeInviter$_load
(slice, ((slice))) $ChangeInviter$_load(slice sc_0) inline;

;; $Claim$_load
(slice, ((int))) $Claim$_load(slice sc_0) inline;

;; $UpdateSubscribe$_load
(slice, ((int, int))) $UpdateSubscribe$_load(slice sc_0) inline;

;; $InternalTransfer$_store
builder $InternalTransfer$_store(builder build_0, (int, int, slice, slice, int, slice) v) inline_ref;

;; $InternalTransfer$_store_cell
cell $InternalTransfer$_store_cell((int, int, slice, slice, int, slice) v) inline;

;; $InternalTransfer$_load
(slice, ((int, int, slice, slice, int, slice))) $InternalTransfer$_load(slice sc_0) inline_ref;

;; $InternalTransfer$_load_bounced
(slice, ((int, int))) $InternalTransfer$_load_bounced(slice sc_0) inline;

;; $TransferNotification$_store
builder $TransferNotification$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $TransferNotification$_store_cell
cell $TransferNotification$_store_cell((int, int, slice, slice) v) inline;

;; $MintVots$_store
builder $MintVots$_store(builder build_0, (slice, int) v) inline;

;; $MintVots$_store_cell
cell $MintVots$_store_cell((slice, int) v) inline;

;; $PoolIncome$_load
(slice, ((int))) $PoolIncome$_load(slice sc_0) inline;

;; $Burn$_load
(slice, ((int, int, slice, cell))) $Burn$_load(slice sc_0) inline;

;; $BurnNotification$_store
builder $BurnNotification$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $BurnNotification$_store_cell
cell $BurnNotification$_store_cell((int, int, slice, slice) v) inline;

;; $BurnNotification$_load_bounced
(slice, ((int, int))) $BurnNotification$_load_bounced(slice sc_0) inline;

;; $TokenWallet$_store
builder $TokenWallet$_store(builder build_0, (int, slice, slice, int, int, int, slice, int, int) v) inline;

;; $TokenWallet$_load
(slice, ((int, slice, slice, int, int, int, slice, int, int))) $TokenWallet$_load(slice sc_0) inline;

;; $StateInit$_get_code
_ $StateInit$_get_code((cell, cell) v) inline;

;; $Context$_get_sender
_ $Context$_get_sender((int, slice, int, slice) v) inline;

;; $WalletData$_to_external
(int, slice, slice, cell) $WalletData$_to_external(((int, slice, slice, cell)) v) inline;

;; $MemberData$_to_external
(int, int, int, int, slice, int) $MemberData$_to_external(((int, int, int, int, slice, int)) v) inline;

;; $TokenWallet$init$_store
builder $TokenWallet$init$_store(builder build_0, (slice, slice) v) inline;

;; $TokenWallet$init$_load
(slice, ((slice, slice))) $TokenWallet$init$_load(slice sc_0) inline;

;; $MembersPool$init$_store
builder $MembersPool$init$_store(builder build_0, (slice) v) inline;

;; $TokenWallet$_contract_init
(int, slice, slice, int, int, int, slice, int, int) $TokenWallet$_contract_init(slice $owner, slice $master) impure inline_ref;

;; $TokenWallet$_contract_load
(int, slice, slice, int, int, int, slice, int, int) $TokenWallet$_contract_load() impure inline_ref;

;; $TokenWallet$_contract_store
() $TokenWallet$_contract_store((int, slice, slice, int, int, int, slice, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $TokenWallet$_init_child
(cell, cell) $TokenWallet$_init_child(cell sys', slice $owner, slice $master) inline_ref;

;; $WalletData$_constructor_balance_owner_master_code
((int, slice, slice, cell)) $WalletData$_constructor_balance_owner_master_code(int $balance, slice $owner, slice $master, cell $code) inline;

;; $TokenWallet$_fun_get_wallet_data
((int, slice, slice, int, int, int, slice, int, int), (int, slice, slice, cell)) $TokenWallet$_fun_get_wallet_data((int, slice, slice, int, int, int, slice, int, int) $self) impure inline_ref;

;; $MemberData$_constructor_totalVoted_lastClaimed_subscribedUntil_jettonsToClaim_inviter_poolWithdrawnAt
((int, int, int, int, slice, int)) $MemberData$_constructor_totalVoted_lastClaimed_subscribedUntil_jettonsToClaim_inviter_poolWithdrawnAt(int $totalVoted, int $lastClaimed, int $subscribedUntil, int $jettonsToClaim, slice $inviter, int $poolWithdrawnAt) inline;

;; $TokenWallet$_fun_memberData
((int, slice, slice, int, int, int, slice, int, int), (int, int, int, int, slice, int)) $TokenWallet$_fun_memberData((int, slice, slice, int, int, int, slice, int, int) $self) impure inline_ref;

;; $MembersPool$_init_child
(cell, cell) $MembersPool$_init_child(cell sys', slice $master) inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body_data_code
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_data_code(slice $to, int $value, int $mode, int $bounce, cell $body, cell $data, cell $code) inline;

;; $InternalTransfer$_constructor_query_id_amount_from_response_destination_forward_ton_amount_forward_payload
((int, int, slice, slice, int, slice)) $InternalTransfer$_constructor_query_id_amount_from_response_destination_forward_ton_amount_forward_payload(int $query_id, int $amount, slice $from, slice $response_destination, int $forward_ton_amount, slice $forward_payload) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice $to, int $value, int $mode) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice $to, int $value, int $mode, int $bounce, cell $body) inline;

;; $TransferNotification$_constructor_query_id_amount_sender_forward_payload
((int, int, slice, slice)) $TransferNotification$_constructor_query_id_amount_sender_forward_payload(int $query_id, int $amount, slice $sender, slice $forward_payload) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice $to, int $value, int $mode, cell $body) inline;

;; $BurnNotification$_constructor_query_id_amount_sender_response_destination
((int, int, slice, slice)) $BurnNotification$_constructor_query_id_amount_sender_response_destination(int $query_id, int $amount, slice $sender, slice $response_destination) inline;

;; $SendParameters$_constructor_to_value_mode_body_data_code
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body_data_code(slice $to, int $value, int $mode, cell $body, cell $data, cell $code) inline;

;; $RefIncome$_constructor_income_sender_amount_counter
((int, slice, int, int)) $RefIncome$_constructor_income_sender_amount_counter(int $income, slice $sender, int $amount, int $counter) inline;

;; $CheckSupply$_constructor_sender_poolWithdrawnAt_totalVoted
((int, slice, int)) $CheckSupply$_constructor_sender_poolWithdrawnAt_totalVoted(slice $sender, int $poolWithdrawnAt, int $totalVoted) inline;

;; $MintVots$_constructor_amount_sender
((slice, int)) $MintVots$_constructor_amount_sender(int $amount, slice $sender) inline;
