#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_Project.headers.fc";
#include "tact_Project.stdlib.fc";
#include "tact_Project.constants.fc";
#include "tact_Project.storage.fc";

;;
;; Contract Project functions
;;

(slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $Project$_contract_init(slice $deployer, int $id) impure inline_ref {
    var (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents)) = (null(), null(), null(), $Data$_constructor_title_description_image_link(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7()), 0, 0, 0, 0, 0, 0, null());
    $self'id = $id;
    $self'owner = $global_myAddress();
    $self'deployer = $deployer;
    return ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents);
}

((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell), (int, int, int, int, int, slice, int, int, (slice, slice, slice, slice))) $Project$_fun_projectData((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self) impure inline_ref {
    var (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents)) = $self;
    var $fresh$ret_0 = $ProjectData$_constructor_voted_invested_required_withdrawn_income_owner_stage_id_data($self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'owner, $self'stage, $self'id, ($self'data'title, $self'data'description, $self'data'image, $self'data'link));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), $fresh$ret_0);
}

((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell), slice) $Project$_fun_userData((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, slice $owner) impure inline_ref {
    var (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents)) = $self;
    var ($init'code, $init'data) = $UserData$_init_child(__tact_context_sys, $owner, $self'id, $self'deployer);
    var $fresh$ret_1 = $global_contractAddress(($init'code, $init'data));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), $fresh$ret_1);
}

;;
;; Receivers of a Contract Project
;;

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) %$Project$_internal_empty((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    $self'income = $self'income + (($Context$_get_value(__tact_context_get()) - $Context$_fun_readForwardFee(__tact_context_get())) - 10000000);
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_DeployProject((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, ((slice, slice, slice, slice), int, cell, slice) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var (($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link), $msg'required, $msg'percents, $msg'owner) = $msg;
    throw_unless(61739, ( __tact_slice_eq_bits($self'deployer, __tact_context_get_sender()) ));
    ($self'data'title, $self'data'description, $self'data'image, $self'data'link) = ($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link);
    $self'required = $msg'required;
    $self'percents = $msg'percents;
    $self'owner = $msg'owner;
    $global_emit($NewProject$_store_cell($NewProject$_constructor_address_id_data_owner_required_percents($global_myAddress(), $self'id, ($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link), $msg'owner, $msg'required, $msg'percents)));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_ChangeStage((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (int) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'stage) = $msg;
    throw_unless(61739, ( __tact_slice_eq_bits($self'deployer, __tact_context_get_sender()) ));
    $self'stage = $msg'stage;
    $global_emit($StageChanged$_store_cell($StageChanged$_constructor_stage($self'stage)));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_OwnerWithdraw((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (int) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'amount) = $msg;
    throw_unless(61739, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    throw_unless(44871, ($self'stage > 1));
    throw_unless(18451, (($msg'amount + $self'withdrawn) <= $self'invested));
    $self'withdrawn = $self'withdrawn + $msg'amount;
    $global_emit($Withdrawn$_store_cell($Withdrawn$_constructor_amount_from($msg'amount, __tact_context_get_sender())));
    $global_send($SendParameters$_constructor_to_value_mode($self'owner, $msg'amount, 1));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_AddIncome((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (int, int) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'ownerPie, $msg'amount) = $msg;
    throw_unless(48540, ($Context$_get_value(__tact_context_get()) >= ($msg'amount + $Context$_fun_readForwardFee(__tact_context_get()))));
    int $platformPie = (($msg'amount * __tact_not_null(__tact_dict_get_int_int($self'percents, 257, 0, 257))) / 100);
    int $ownerPie = (($msg'amount * __tact_not_null(__tact_dict_get_int_int($self'percents, 257, 1, 257))) / 100);
    if ((~ $msg'ownerPie)) {
        $self'income = $self'income + $ownerPie;
    }
    $self'income = $self'income + $msg'amount;
    $global_emit($IncomeAdded$_store_cell($IncomeAdded$_constructor_amount_from($msg'amount, __tact_context_get_sender())));
    $global_send($SendParameters$_constructor_to_value_mode($self'deployer, $ownerPie, 0));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_TransferNotification((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'query_id, $msg'amount, $msg'sender, $msg'forward_payload) = $msg;
    throw_unless(44871, ($self'stage == 1));
    throw_unless(48540, ($Context$_get_value(__tact_context_get()) >= 100000000));
    $global_send($SendParameters$_constructor_to_value_mode_body(__gen_slice_address_5f45e3ecf0a724d94ef8d1c710fa27693da01a43e205276deaa52922c154f0b2(), 0, 64, $CheckWallet$_store_cell($CheckWallet$_constructor_wallet_amount_sender(__tact_context_get_sender(), $msg'amount, $msg'sender))));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_Validate((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (slice, int, slice) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'sender, $msg'amount, $msg'wallet) = $msg;
    throw_unless(61739, ( __tact_slice_eq_bits(__gen_slice_address_5f45e3ecf0a724d94ef8d1c710fa27693da01a43e205276deaa52922c154f0b2(), __tact_context_get_sender()) ));
    $global_emit($Voted$_store_cell($Voted$_constructor_amount_from($msg'amount, $msg'sender)));
    $self'voted = $self'voted + $msg'amount;
    if (($self'voted >= ($self'required * 20))) {
        $self'stage = 2;
        $global_emit($StageChanged$_store_cell($StageChanged$_constructor_stage($self'stage)));
    }
    var ($init'code, $init'data) = $UserData$_init_child(__tact_context_sys, $msg'sender, $self'id, $self'deployer);
    slice $to = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_to_value_mode_body_code_data($to, 0, 64, $AddInvest$_store_cell($AddInvest$_constructor_invested_voted(0, $msg'amount)), $init'code, $init'data));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_Invest((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (int) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'amount) = $msg;
    throw_unless(44871, ($self'stage == 2));
    throw_unless(48540, ($Context$_get_value(__tact_context_get()) >= (($msg'amount + $Context$_fun_readForwardFee(__tact_context_get())) + 50000000)));
    $self'invested = $self'invested + $msg'amount;
    if (($self'invested >= $self'required)) {
        $self'stage = 3;
        $global_emit($StageChanged$_store_cell($StageChanged$_constructor_stage($self'stage)));
    }
    var ($init'code, $init'data) = $UserData$_init_child(__tact_context_sys, __tact_context_get_sender(), $self'id, $self'deployer);
    slice $to = $global_contractAddress(($init'code, $init'data));
    $global_emit($Invested$_store_cell($Invested$_constructor_amount_from($msg'amount, __tact_context_get_sender())));
    $global_send($SendParameters$_constructor_to_value_mode_body_code_data($to, 50000000, 0, $AddInvest$_store_cell($AddInvest$_constructor_invested_voted($msg'amount, 0)), $init'code, $init'data));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

(((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell)), ()) $Project$_internal_binary_UserWithdraw((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) $self, (slice, int, int, int) $msg) impure inline {
    var ($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents) = $self;
    var ($msg'from, $msg'withdrawnAt, $msg'voted, $msg'invested) = $msg;
    var ($init'code, $init'data) = $UserData$_init_child(__tact_context_sys, $msg'from, $self'id, $self'deployer);
    slice $to = $global_contractAddress(($init'code, $init'data));
    throw_unless(61739, ( __tact_slice_eq_bits($to, __tact_context_get_sender()) ));
    throw_unless(44871, ($self'stage == 3));
    int $incomePie = (($self'income - $msg'withdrawnAt) / 100);
    int $votsPie = ((($incomePie * __tact_not_null(__tact_dict_get_int_int($self'percents, 257, 2, 257))) / 100) * ($self'voted / $msg'voted));
    int $tonsPie = ((($incomePie * __tact_not_null(__tact_dict_get_int_int($self'percents, 257, 3, 257))) / 100) * ($self'invested / $msg'invested));
    int $income = ($votsPie + $tonsPie);
    throw_unless(48540, ($global_myBalance() >= $income));
    throw_unless(6959, ($income >= 100000000));
    $global_emit($Withdrawn$_store_cell($Withdrawn$_constructor_amount_from($income, $msg'from)));
    $global_send($SendParameters$_constructor_to_value_mode_body(__tact_context_get_sender(), $income, 0, $GetIncome$_store_cell($GetIncome$_constructor_income_withdrawnAt($income, $self'income))));
    return (($self'deployer, $self'id, $self'owner, ($self'data'title, $self'data'description, $self'data'image, $self'data'link), $self'voted, $self'invested, $self'required, $self'withdrawn, $self'income, $self'stage, $self'percents), ());
}

;;
;; Get methods of a Contract Project
;;

_ %projectData() method_id(113093) {
    var self = $Project$_contract_load();
    var res = self~$Project$_fun_projectData();
    return $ProjectData$_to_external(res);
}

_ %userData(slice $owner) method_id(86369) {
    slice $owner = __tact_verify_address($owner);
    var self = $Project$_contract_load();
    var res = self~$Project$_fun_userData($owner);
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Project
;;

((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell), int) $Project$_contract_router_internal((slice, int, slice, (slice, slice, slice, slice), int, int, int, int, int, int, cell) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$Project$_internal_empty();
        return (self, true);
    }
    
    ;; Receive DeployProject message
    if (op == 11469140) {
        var msg = in_msg~$DeployProject$_load();
        self~$Project$_internal_binary_DeployProject(msg);
        return (self, true);
    }
    
    ;; Receive ChangeStage message
    if (op == 581252563) {
        var msg = in_msg~$ChangeStage$_load();
        self~$Project$_internal_binary_ChangeStage(msg);
        return (self, true);
    }
    
    ;; Receive OwnerWithdraw message
    if (op == 4050357351) {
        var msg = in_msg~$OwnerWithdraw$_load();
        self~$Project$_internal_binary_OwnerWithdraw(msg);
        return (self, true);
    }
    
    ;; Receive AddIncome message
    if (op == 940962217) {
        var msg = in_msg~$AddIncome$_load();
        self~$Project$_internal_binary_AddIncome(msg);
        return (self, true);
    }
    
    ;; Receive TransferNotification message
    if (op == 0x7362d09c) {
        var msg = in_msg~$TransferNotification$_load();
        self~$Project$_internal_binary_TransferNotification(msg);
        return (self, true);
    }
    
    ;; Receive Validate message
    if (op == 1488651829) {
        var msg = in_msg~$Validate$_load();
        self~$Project$_internal_binary_Validate(msg);
        return (self, true);
    }
    
    ;; Receive Invest message
    if (op == 3962699447) {
        var msg = in_msg~$Invest$_load();
        self~$Project$_internal_binary_Invest(msg);
        return (self, true);
    }
    
    ;; Receive UserWithdraw message
    if (op == 927497335) {
        var msg = in_msg~$UserWithdraw$_load();
        self~$Project$_internal_binary_UserWithdraw(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Project$_contract_load();
    
    ;; Handle operation
    int handled = self~$Project$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Project$_contract_store(self);
}
