#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_ProjectsDeployer.headers.fc";
#include "tact_ProjectsDeployer.stdlib.fc";
#include "tact_ProjectsDeployer.constants.fc";
#include "tact_ProjectsDeployer.storage.fc";

;;
;; Contract ProjectsDeployer functions
;;

(int, int, slice, int, int) $ProjectsDeployer$_contract_init() impure inline_ref {
    var (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice)) = (0, 0, null(), true, 0);
    $self'owner = __tact_context_get_sender();
    return ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice);
}

((int, int, slice, int, int), (slice, int, int, int, int, slice)) $ProjectsDeployer$_fun_data((int, int, slice, int, int) $self) impure inline_ref {
    var (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice)) = $self;
    var $fresh$ret_25 = $DeployerData$_constructor_owner_projectId_donationId_projectPrice_master_balance($self'owner, $self'projectId, $self'donationId, $self'projectPrice, __gen_slice_address_5f45e3ecf0a724d94ef8d1c710fa27693da01a43e205276deaa52922c154f0b2(), $global_myBalance());
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), $fresh$ret_25);
}

((int, int, slice, int, int), slice) $ProjectsDeployer$_fun_projectAddress((int, int, slice, int, int) $self, int $id) impure inline_ref {
    var (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice)) = $self;
    var $fresh$ret_26 = $global_contractAddress($Project$_init_child(__tact_context_sys, $global_myAddress(), $id));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), $fresh$ret_26);
}

((int, int, slice, int, int), slice) $ProjectsDeployer$_fun_donationAddress((int, int, slice, int, int) $self, int $id) impure inline_ref {
    var (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice)) = $self;
    var $fresh$ret_27 = $global_contractAddress($Donation$_init_child(__tact_context_sys, $global_myAddress(), $id));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), $fresh$ret_27);
}

;;
;; Receivers of a Contract ProjectsDeployer
;;

(((int, int, slice, int, int)), ()) %$ProjectsDeployer$_internal_empty((int, int, slice, int, int) $self) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_ChangeOwner((int, int, slice, int, int) $self, (slice) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($msg'owner) = $msg;
    throw_unless(56837, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $self'owner = $msg'owner;
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_ChangePrice((int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($msg'projectPrice) = $msg;
    throw_unless(56837, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $self'projectPrice = $msg'projectPrice;
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_ChangeActive((int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($msg'active) = $msg;
    throw_unless(56837, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $self'active = $msg'active;
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_Withdraw((int, int, slice, int, int) $self, (int) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($msg'query_id) = $msg;
    throw_unless(56837, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_value_mode($self'owner, ($global_myBalance() - 100000000), 1));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_StageManage((int, int, slice, int, int) $self, (int, int) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($msg'id, $msg'stage) = $msg;
    throw_unless(56837, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    var ($init'code, $init'data) = $Project$_init_child(__tact_context_sys, $global_myAddress(), $msg'id);
    slice $to = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_to_value_mode_body_data_code($to, 0, 64, $ChangeStage$_store_cell($ChangeStage$_constructor_stage($msg'stage)), $init'data, $init'code));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_ActiveManage((int, int, slice, int, int) $self, (int, int) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($msg'active, $msg'id) = $msg;
    throw_unless(56837, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    var ($init'code, $init'data) = $Donation$_init_child(__tact_context_sys, $global_myAddress(), $msg'id);
    slice $to = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_to_value_mode_body_data_code($to, 0, 64, $ChangeActive$_store_cell($ChangeActive$_constructor_active($msg'active)), $init'data, $init'code));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_CreateProject((int, int, slice, int, int) $self, ((slice, slice, slice, slice), int, cell, slice) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var (($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link), $msg'required, $msg'percents, $msg'owner) = $msg;
    throw_unless(61530, $self'active);
    throw_unless(48540, ($Context$_get_value(__tact_context_get()) > (($self'projectPrice + $Context$_fun_readForwardFee(__tact_context_get())) + 200000000)));
    var ($init'code, $init'data) = $Project$_init_child(__tact_context_sys, $global_myAddress(), $self'projectId);
    slice $to = $global_contractAddress(($init'code, $init'data));
    int $percents = (((__tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 0, 257)) + __tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 1, 257))) + __tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 2, 257))) + __tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 3, 257)));
    throw_unless(44024, ($percents == 100));
    throw_unless(44024, ( (( (( ((__tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 0, 257)) > 0)) ? ((__tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 1, 257)) > 0)) : (false) )) ? ((__tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 2, 257)) > 0)) : (false) )) ? ((__tact_not_null(__tact_dict_get_int_int($msg'percents, 257, 3, 257)) > 0)) : (false) ));
    $global_emit($NewProject$_store_cell($NewProject$_constructor_address_id_data_owner_required_percents($to, $self'projectId, ($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link), $msg'owner, $msg'required, $msg'percents)));
    $self'projectId = $self'projectId + 1;
    $global_send($SendParameters$_constructor_to_value_mode_body_data_code($to, 200000000, 0, $DeployProject$_store_cell($DeployProject$_constructor_owner_data_required_percents($msg'owner, ($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link), $msg'required, $msg'percents)), $init'data, $init'code));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_CreateDonation((int, int, slice, int, int) $self, ((slice, slice, slice, slice), slice) $msg) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var (($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link), $msg'owner) = $msg;
    throw_unless(61530, $self'active);
    throw_unless(48540, ($Context$_get_value(__tact_context_get()) > ($self'projectPrice + $Context$_fun_readForwardFee(__tact_context_get()))));
    var ($init'code, $init'data) = $Donation$_init_child(__tact_context_sys, $global_myAddress(), $self'donationId);
    slice $to = $global_contractAddress(($init'code, $init'data));
    $global_emit($NewDonation$_store_cell($NewDonation$_constructor_address_id_owner_data($to, $self'donationId, $msg'owner, ($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link))));
    $self'donationId = $self'donationId + 1;
    $global_send($SendParameters$_constructor_to_value_mode_body_data_code($to, 200000000, 0, $DeployDonation$_store_cell($DeployDonation$_constructor_owner_data($msg'owner, ($msg'data'title, $msg'data'description, $msg'data'image, $msg'data'link))), $init'data, $init'code));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

(((int, int, slice, int, int)), ()) $ProjectsDeployer$_internal_binary_Deploy((int, int, slice, int, int) $self, (int) $deploy) impure inline {
    var ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice)~$ProjectsDeployer$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'projectId, $self'donationId, $self'owner, $self'active, $self'projectPrice), ());
}

;;
;; Get methods of a Contract ProjectsDeployer
;;

_ %data() method_id(100194) {
    var self = $ProjectsDeployer$_contract_load();
    var res = self~$ProjectsDeployer$_fun_data();
    return $DeployerData$_to_external(res);
}

_ %projectAddress(int $id) method_id(87085) {
    int $id = $id;
    var self = $ProjectsDeployer$_contract_load();
    var res = self~$ProjectsDeployer$_fun_projectAddress($id);
    return res;
}

_ %donationAddress(int $id) method_id(120108) {
    int $id = $id;
    var self = $ProjectsDeployer$_contract_load();
    var res = self~$ProjectsDeployer$_fun_donationAddress($id);
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ProjectsDeployer
;;

((int, int, slice, int, int), int) $ProjectsDeployer$_contract_router_internal((int, int, slice, int, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$ProjectsDeployer$_internal_empty();
        return (self, true);
    }
    
    ;; Receive ChangeOwner message
    if (op == 2242002949) {
        var msg = in_msg~$ChangeOwner$_load();
        self~$ProjectsDeployer$_internal_binary_ChangeOwner(msg);
        return (self, true);
    }
    
    ;; Receive ChangePrice message
    if (op == 3582265868) {
        var msg = in_msg~$ChangePrice$_load();
        self~$ProjectsDeployer$_internal_binary_ChangePrice(msg);
        return (self, true);
    }
    
    ;; Receive ChangeActive message
    if (op == 1103353291) {
        var msg = in_msg~$ChangeActive$_load();
        self~$ProjectsDeployer$_internal_binary_ChangeActive(msg);
        return (self, true);
    }
    
    ;; Receive Withdraw message
    if (op == 1239257369) {
        var msg = in_msg~$Withdraw$_load();
        self~$ProjectsDeployer$_internal_binary_Withdraw(msg);
        return (self, true);
    }
    
    ;; Receive StageManage message
    if (op == 1504448527) {
        var msg = in_msg~$StageManage$_load();
        self~$ProjectsDeployer$_internal_binary_StageManage(msg);
        return (self, true);
    }
    
    ;; Receive ActiveManage message
    if (op == 1639986858) {
        var msg = in_msg~$ActiveManage$_load();
        self~$ProjectsDeployer$_internal_binary_ActiveManage(msg);
        return (self, true);
    }
    
    ;; Receive CreateProject message
    if (op == 1719684186) {
        var msg = in_msg~$CreateProject$_load();
        self~$ProjectsDeployer$_internal_binary_CreateProject(msg);
        return (self, true);
    }
    
    ;; Receive CreateDonation message
    if (op == 3989847898) {
        var msg = in_msg~$CreateDonation$_load();
        self~$ProjectsDeployer$_internal_binary_CreateDonation(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ProjectsDeployer$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ProjectsDeployer$_contract_load();
    
    ;; Handle operation
    int handled = self~$ProjectsDeployer$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ProjectsDeployer$_contract_store(self);
}
