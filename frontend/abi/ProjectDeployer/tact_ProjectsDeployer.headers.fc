;;
;; Header files for ProjectsDeployer
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Data$_store
builder $Data$_store(builder build_0, (slice, slice, slice, slice) v) inline;

;; $Data$_load
(slice, ((slice, slice, slice, slice))) $Data$_load(slice sc_0) inline;

;; $DeployDonation$_store
builder $DeployDonation$_store(builder build_0, ((slice, slice, slice, slice), slice) v) inline;

;; $DeployDonation$_store_cell
cell $DeployDonation$_store_cell(((slice, slice, slice, slice), slice) v) inline;

;; $NewProject$_store
builder $NewProject$_store(builder build_0, (slice, int, (slice, slice, slice, slice), slice, int, cell) v) inline_ref;

;; $NewProject$_store_cell
cell $NewProject$_store_cell((slice, int, (slice, slice, slice, slice), slice, int, cell) v) inline;

;; $NewDonation$_store
builder $NewDonation$_store(builder build_0, (slice, int, slice, (slice, slice, slice, slice)) v) inline;

;; $NewDonation$_store_cell
cell $NewDonation$_store_cell((slice, int, slice, (slice, slice, slice, slice)) v) inline;

;; $ChangeOwner$_load
(slice, ((slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $ChangeActive$_store
builder $ChangeActive$_store(builder build_0, (int) v) inline;

;; $ChangeActive$_store_cell
cell $ChangeActive$_store_cell((int) v) inline;

;; $ChangeActive$_load
(slice, ((int))) $ChangeActive$_load(slice sc_0) inline;

;; $ChangePrice$_load
(slice, ((int))) $ChangePrice$_load(slice sc_0) inline;

;; $Withdraw$_load
(slice, ((int))) $Withdraw$_load(slice sc_0) inline;

;; $StageManage$_load
(slice, ((int, int))) $StageManage$_load(slice sc_0) inline;

;; $ActiveManage$_load
(slice, ((int, int))) $ActiveManage$_load(slice sc_0) inline;

;; $CreateProject$_load
(slice, (((slice, slice, slice, slice), int, cell, slice))) $CreateProject$_load(slice sc_0) inline;

;; $CreateDonation$_load
(slice, (((slice, slice, slice, slice), slice))) $CreateDonation$_load(slice sc_0) inline;

;; $DeployProject$_store
builder $DeployProject$_store(builder build_0, ((slice, slice, slice, slice), int, cell, slice) v) inline;

;; $DeployProject$_store_cell
cell $DeployProject$_store_cell(((slice, slice, slice, slice), int, cell, slice) v) inline;

;; $ChangeStage$_store
builder $ChangeStage$_store(builder build_0, (int) v) inline;

;; $ChangeStage$_store_cell
cell $ChangeStage$_store_cell((int) v) inline;

;; $ProjectsDeployer$_store
builder $ProjectsDeployer$_store(builder build_0, (int, int, slice, int, int) v) inline;

;; $ProjectsDeployer$_load
(slice, ((int, int, slice, int, int))) $ProjectsDeployer$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $DeployerData$_to_external
(slice, int, int, int, int, slice) $DeployerData$_to_external(((slice, int, int, int, int, slice)) v) inline;

;; $Project$init$_store
builder $Project$init$_store(builder build_0, (slice, int) v) inline;

;; $Donation$init$_store
builder $Donation$init$_store(builder build_0, (slice, int) v) inline;

;; $ProjectsDeployer$_contract_init
(int, int, slice, int, int) $ProjectsDeployer$_contract_init() impure inline_ref;

;; $ProjectsDeployer$_contract_load
(int, int, slice, int, int) $ProjectsDeployer$_contract_load() impure inline_ref;

;; $ProjectsDeployer$_contract_store
() $ProjectsDeployer$_contract_store((int, int, slice, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $Project$_init_child
(cell, cell) $Project$_init_child(cell sys', slice $deployer, int $id) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $Donation$_init_child
(cell, cell) $Donation$_init_child(cell sys', slice $deployer, int $id) inline_ref;

;; $DeployerData$_constructor_owner_projectId_donationId_projectPrice_master_balance
((slice, int, int, int, int, slice)) $DeployerData$_constructor_owner_projectId_donationId_projectPrice_master_balance(slice $owner, int $projectId, int $donationId, int $projectPrice, slice $master, int $balance) inline;

;; $ProjectsDeployer$_fun_data
((int, int, slice, int, int), (slice, int, int, int, int, slice)) $ProjectsDeployer$_fun_data((int, int, slice, int, int) $self) impure inline_ref;

;; $ProjectsDeployer$_fun_projectAddress
((int, int, slice, int, int), slice) $ProjectsDeployer$_fun_projectAddress((int, int, slice, int, int) $self, int $id) impure inline_ref;

;; $ProjectsDeployer$_fun_donationAddress
((int, int, slice, int, int), slice) $ProjectsDeployer$_fun_donationAddress((int, int, slice, int, int) $self, int $id) impure inline_ref;

;; $ProjectsDeployer$_fun_forward
((int, int, slice, int, int), ()) $ProjectsDeployer$_fun_forward((int, int, slice, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $ProjectsDeployer$_fun_notify
((int, int, slice, int, int), ()) $ProjectsDeployer$_fun_notify((int, int, slice, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice $to, int $value, int $mode) inline;

;; $SendParameters$_constructor_to_value_mode_body_data_code
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body_data_code(slice $to, int $value, int $mode, cell $body, cell $data, cell $code) inline;

;; $ChangeStage$_constructor_stage
((int)) $ChangeStage$_constructor_stage(int $stage) inline;

;; $ChangeActive$_constructor_active
((int)) $ChangeActive$_constructor_active(int $active) inline;

;; $NewProject$_constructor_address_id_data_owner_required_percents
((slice, int, (slice, slice, slice, slice), slice, int, cell)) $NewProject$_constructor_address_id_data_owner_required_percents(slice $address, int $id, (slice, slice, slice, slice) $data, slice $owner, int $required, cell $percents) inline;

;; $DeployProject$_constructor_owner_data_required_percents
(((slice, slice, slice, slice), int, cell, slice)) $DeployProject$_constructor_owner_data_required_percents(slice $owner, (slice, slice, slice, slice) $data, int $required, cell $percents) inline;

;; $NewDonation$_constructor_address_id_owner_data
((slice, int, slice, (slice, slice, slice, slice))) $NewDonation$_constructor_address_id_owner_data(slice $address, int $id, slice $owner, (slice, slice, slice, slice) $data) inline;

;; $DeployDonation$_constructor_owner_data
(((slice, slice, slice, slice), slice)) $DeployDonation$_constructor_owner_data(slice $owner, (slice, slice, slice, slice) $data) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
